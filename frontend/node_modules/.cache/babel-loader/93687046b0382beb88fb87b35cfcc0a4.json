{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.compilePseudoSelector = exports.aliases = exports.pseudos = exports.filters = void 0;\nvar css_what_1 = require(\"css-what\");\nvar filters_js_1 = require(\"./filters.js\");\nObject.defineProperty(exports, \"filters\", {\n  enumerable: true,\n  get: function () {\n    return filters_js_1.filters;\n  }\n});\nvar pseudos_js_1 = require(\"./pseudos.js\");\nObject.defineProperty(exports, \"pseudos\", {\n  enumerable: true,\n  get: function () {\n    return pseudos_js_1.pseudos;\n  }\n});\nvar aliases_js_1 = require(\"./aliases.js\");\nObject.defineProperty(exports, \"aliases\", {\n  enumerable: true,\n  get: function () {\n    return aliases_js_1.aliases;\n  }\n});\nvar subselects_js_1 = require(\"./subselects.js\");\nfunction compilePseudoSelector(next, selector, options, context, compileToken) {\n  var _a;\n  var name = selector.name,\n    data = selector.data;\n  if (Array.isArray(data)) {\n    if (!(name in subselects_js_1.subselects)) {\n      throw new Error(\"Unknown pseudo-class :\".concat(name, \"(\").concat(data, \")\"));\n    }\n    return subselects_js_1.subselects[name](next, data, options, context, compileToken);\n  }\n  var userPseudo = (_a = options.pseudos) === null || _a === void 0 ? void 0 : _a[name];\n  var stringPseudo = typeof userPseudo === \"string\" ? userPseudo : aliases_js_1.aliases[name];\n  if (typeof stringPseudo === \"string\") {\n    if (data != null) {\n      throw new Error(\"Pseudo \".concat(name, \" doesn't have any arguments\"));\n    }\n    // The alias has to be parsed here, to make sure options are respected.\n    var alias = (0, css_what_1.parse)(stringPseudo);\n    return subselects_js_1.subselects[\"is\"](next, alias, options, context, compileToken);\n  }\n  if (typeof userPseudo === \"function\") {\n    (0, pseudos_js_1.verifyPseudoArgs)(userPseudo, name, data, 1);\n    return function (elem) {\n      return userPseudo(elem, data) && next(elem);\n    };\n  }\n  if (name in filters_js_1.filters) {\n    return filters_js_1.filters[name](next, data, options, context);\n  }\n  if (name in pseudos_js_1.pseudos) {\n    var pseudo_1 = pseudos_js_1.pseudos[name];\n    (0, pseudos_js_1.verifyPseudoArgs)(pseudo_1, name, data, 2);\n    return function (elem) {\n      return pseudo_1(elem, options, data) && next(elem);\n    };\n  }\n  throw new Error(\"Unknown pseudo-class :\".concat(name));\n}\nexports.compilePseudoSelector = compilePseudoSelector;\n//# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"script"}